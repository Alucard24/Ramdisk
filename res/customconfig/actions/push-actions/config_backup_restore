#!/sbin/busybox sh
export PATH="/res/customconfig/actions/push-actions:${PATH}";

BB=/sbin/busybox

LOCK_FILE="/data/.alucard/restore_running";

if [ "a$2" == "a" ]; then
	echo "$config_backup_restore";
else
	config_backup_restore=$2;
	echo "$config_backup_restore";
fi;

case "${config_backup_restore}" in
	3)
		(
			if [ "$(pgrep -f "push-actions/config_backup_restore" | wc -l)" -lt "5" ]; then
				cp -a /res/customconfig/battery.profile /data/.alucard/;
				echo "battery" > /data/.alucard/.active.profile;
				echo "Updating configuration, please wait ~50sec"
				echo "STweaks will restart with new settings.";
				$BB sh /res/user_uci_test_run.sh > /dev/null;
			fi;
		)&
	;;
	4)
		(
			if [ "$(pgrep -f "push-actions/config_backup_restore" | wc -l)" -lt "5" ]; then
				cp -a /res/customconfig/default.profile /data/.alucard/;
				echo "default" > /data/.alucard/.active.profile;
				echo "Updating configuration, please wait ~50sec"
				echo "STweaks will will restart with new settings.";
				$BB sh /res/user_uci_test_run.sh > /dev/null;
			fi;
		)&
	;;
	5)
		(
			if [ "$(pgrep -f "push-actions/config_backup_restore" | wc -l)" -lt "5" ]; then
				cp -a /res/customconfig/performance.profile /data/.alucard/;
				echo "performance" > /data/.alucard/.active.profile;
				echo "Updating configuration, please wait ~50sec"
				echo "STweaks will restart with new settings.";
				$BB sh /res/user_uci_test_run.sh > /dev/null;
			fi;
		)&
	;;
	6)
		(
			if [ "$(pgrep -f "push-actions/config_backup_restore" | wc -l)" -lt "5" ]; then
				cp -a /res/customconfig/extreme_battery.profile /data/.alucard/;
				echo "extreme_battery" > /data/.alucard/.active.profile;
				echo "Updating configuration, please wait ~50sec"
				echo "STweaks will restart with new settings.";
				$BB sh /res/user_uci_test_run.sh > /dev/null;
			fi;
		)&
	;;
	7)
		(
			if [ "$(pgrep -f "push-actions/config_backup_restore" | wc -l)" -lt "5" ]; then
				cp -a /res/customconfig/extreme_performance.profile /data/.alucard/;
				echo "extreme_performance" > /data/.alucard/.active.profile;
				echo "Updating configuration, please wait ~50sec"
				echo "STweaks will restart with new settings.";
				$BB sh /res/user_uci_test_run.sh > /dev/null;
			fi;
		)&
	;;
	*)
		PROFILE=`cat /data/.alucard/.active.profile`;
		file2="/data/.alucard/$PROFILE.profile_backup";
		# if someone full wipe the system, then use the profile_backup from sd-card
		if [ ! -f $file2 ]; then
			file2="/sdcard/$PROFILE.profile_backup";
		fi;
	;;
esac;

# check again for profile, maybe we have changed it ...
PROFILE=`cat /data/.alucard/.active.profile`;

case "${config_backup_restore}" in
	1)
		echo "Backup config file ...";
		cp /data/.alucard/${PROFILE}.profile /data/.alucard/${PROFILE}.profile_backup;
		cp /data/.alucard/${PROFILE}.profile /sdcard/${PROFILE}.profile_backup;
		echo "Backup Done!";
	;;
	2)
		file1="/data/.alucard/${PROFILE}.profile";

		if [ ! -f $file1 ] || [ ! -f $file2 ]; then
			echo "File not found!";
			exit;
		fi;

		if [ "$(pgrep -f "push-actions/config_backup_restore" | wc -l)" -le "5" ]; then
			echo "Restoring config file, please wait ~30sec till full restore is done"
			echo "then the app will restart with new settings.";
			(
				rm -f $LOCK_FILE;

				# read in file1->line1
				while read line1; do
					# split the config into variables where we find "="
					line1_1=$(echo $line1 | cut -f 1 -d '=');
					line1_2=$(echo $line1 | cut -f 2 -d '=');

					# grep the content from backup-file ...
					line2=$(grep "^${line1_1}\=" $file2)
					# ... and also split into variables
					line2_1=$(echo $line2 | cut -f 1 -d '=');
					line2_2=$(echo $line2 | cut -f 2 -d '=');

					# compare config- and backup-file
					if [ "a${line1_1}" != "a${line2_1}" ]; then
						# nothing to do -> continue the loop
						continue;
					else
						# if backup-file has different values, then restore it
						if [ "a${line1_2}" != "a${line2_2}" ]; then
							if [ "${line2_2}" != "" ]; then
								/sbin/busybox sed -i "s/${line1_1}=${line1_2}/${line2_1}=${line2_2}/" $file1;
								echo "edit: ${line1_1}=${line1_2} -> ${line2_1}=${line2_2}";
							fi;
						else
							# nothing to do -> continue the loop
							# echo "not_edit: ${line1_1}=${line1_2} -> ${line2_1}=${line2_2}";
							continue;
						fi;
					fi;
				done<$file1

				# hiding all push action scripts from uci.sh
				$BB mount -o remount,rw /;
				mv /res/customconfig/actions/push-actions/* /res/no-push-on-boot/;
				cp /res/misc_scripts/config_backup_restore /res/customconfig/actions/push-actions/;
				chmod 6755 /res/customconfig/actions/push-actions/config_backup_restore;

				# apply New STweaks settings
				/res/uci.sh restore;
				# add trigger for push actions restore function
				echo "uci done" > $LOCK_FILE;
			)&

			# starting loop to wait till uci.sh apply finish working
			(
				while [ ! -e $LOCK_FILE ]; do
					sleep 5;
					echo "Still waiting till all DONE!";
				done;

				# restore all the PUSH Button Actions back to there location
				/sbin/busybox mount -o remount,rw rootfs;
				mv /res/no-push-on-boot/* /res/customconfig/actions/push-actions/;
				rm -f $LOCK_FILE;

				STWEAKSAPP_RUNNING=$(pgrep -f "com.gokhanmoral.stweaks.app" | wc -l)

				if [ "$STWEAKSAPP_RUNNING" != "0" ]; then
					# Killing stweaks, if was open it's will restart!
					pkill -f "com.gokhanmoral.stweaks.app";
					/system/bin/am start -a android.intent.action.MAIN -n com.gokhanmoral.stweaks.app/.MainActivity;
				fi;
			)&

			exit 0;
		else
			# Anti smart user protection! multi run of this script will bring HELL!
			echo "you are running RESTORE already! please wait!";
		fi;
	;;
	*)
	;;
esac;
