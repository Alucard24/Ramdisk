#!/sbin/busybox sh
# custom script helper by Gokhan Moral

DEFAULT_PROFILE="/res/customconfig/default.profile";
BATTERY_PROFILE="/res/customconfig/battery.profile";
EXTREME_PERFORMANCE_PROFILE="/res/customconfig/extreme_performance.profile";
EXTREME_BATTERY_PROFILE="/res/customconfig/extreme_battery.profile";
PERFORMANCE_PROFILE="/res/customconfig/performance.profile";
CONFIG_XML="/res/customconfig/customconfig.xml";
PROFILE_PATH="/data/.alucard";
TEMP_CONFIG="${PROFILE_PATH}/.config.tmp";
LAST_SELECTED=".active.profile";
ACTIVE_PROFILE="${PROFILE_PATH}/${LAST_SELECTED}";

apply_config()
{
	# read the xml-config and ... 
	while IFS=\> read -r key value; do
		action=$(echo "$key" |  grep -v "\<button" | sed -e 's/action=/\naction=/g' | grep "action" | awk -F '"' '{print $2}');
		if [ "a$action" != "a" ]; then
			actionval=`/res/uci_for_loop.sh $action`;
			echo "applying: /res/uci_for_loop.sh $action $actionval";
			# ... start all scripts
			eval /res/uci_for_loop.sh $action $actionval;
		fi;
	done < $CONFIG_XML;
}

print_config()
{
	cat $CONFIG_XML;
}

list_profile()
{
	ls -1 $PROFILE_PATH | grep "\.profile" | sed -e 's/.profile//g';
}

select_profile()
{
	if [ "a$1" == "a" ]; then
		cat $ACTIVE_PROFILE;
	else
		# if there is no such profile, create one
		_ACTIVE_PROFILE=`cat $ACTIVE_PROFILE`;
		if [ ! -f ${PROFILE_PATH}/${_ACTIVE_PROFILE}.profile ]; then
			cp -a $DEFAULT_PROFILE ${PROFILE_PATH}/${1}.profile;
			[ "$_ACTIVE_PROFILE" == "battery" ] && cp -a $BATTERY_PROFILE ${PROFILE_PATH}/${1}.profile;
			[ "$_ACTIVE_PROFILE" == "performance" ] && cp -a $PERFORMANCE_PROFILE ${PROFILE_PATH}/${1}.profile;
			[ "$_ACTIVE_PROFILE" == "extreme_performance" ] && cp -a $EXTREME_PERFORMANCE_PROFILE ${PROFILE_PATH}/${1}.profile;
			[ "$_ACTIVE_PROFILE" == "extreme_battery" ] && cp -a $EXTREME_BATTERY_PROFILE ${PROFILE_PATH}/${1}.profile;
		fi;
		if [ ! -f ${PROFILE_PATH}/${1}.profile ]; then
			cp -a ${PROFILE_PATH}/${_ACTIVE_PROFILE}.profile ${PROFILE_PATH}/${1}.profile;
		fi;
		echo "$1" > $ACTIVE_PROFILE;
		chmod 777 ${PROFILE_PATH}/${1}.profile;
	fi;
}

delete_profile()
{
	if [ "`cat $ACTIVE_PROFILE`" == "$1" ]; then
		select_profile "default";
	fi;
	rm ${PROFILE_PATH}/${1}.profile;
}

rename_profile()
{
	# move old profile to new
	mv ${PROFILE_PATH}/${1}.profile ${PROFILE_PATH}/${2}.profile;

	# if old profile is active, set the new profile as active profile
	if [ "`cat $ACTIVE_PROFILE`" == "$1" ]; then
		echo "$2" > $ACTIVE_PROFILE;
	fi;
}

write_config()
{
	if [ "a$1" == "a" ]; then
		_CONFIG_FILE=$PROFILE_PATH/`cat ${PROFILE_PATH}/${LAST_SELECTED}`.profile;
	else
		_CONFIG_FILE=$PROFILE_PATH/${1}.profile;
	fi;

	rm -f $TEMP_CONFIG;
	# read the default profile "keys" and set the "values" from variables
	while IFS="=" read -r key value; do
		if [ -n $key ]; then
			evalexpr=$(eval "echo \$$key");
			echo "$key=$evalexpr";
		fi;
	done < $DEFAULT_PROFILE > $TEMP_CONFIG;

	# copy the new config to the actual profile
	cp $TEMP_CONFIG $_CONFIG_FILE;
	chmod 777 $_CONFIG_FILE;
	rm -f $TEMP_CONFIG;
}

read_config()
{
	if [ "a$1" == "a" ]; then
		_CONFIG_FILE=$PROFILE_PATH/`cat ${PROFILE_PATH}/${LAST_SELECTED}`.profile;
	else
		_CONFIG_FILE=${1};
	fi;

	eval `sed -e 's/[[:space:]]*\=[[:space:]]*/=/g' \
	-e 's/;.*$//' \
	-e 's/[[:space:]]*$//' \
	-e 's/^[[:space:]]*//' \
	-e "s/^\(.*\)=\([^\"']*\)$/\1=\"\2\"/" \
	< $_CONFIG_FILE | grep "="`;
}

read_defaults()
{
	read_config $DEFAULT_PROFILE;
	_ACTIVE_PROFILE=`cat $ACTIVE_PROFILE`;
	[ "$_ACTIVE_PROFILE" == "battery" ] && read_config $BATTERY_PROFILE;
	[ "$_ACTIVE_PROFILE" == "performance" ] && read_config $PERFORMANCE_PROFILE;
	[ "$_ACTIVE_PROFILE" == "extreme_performance" ] && read_config $EXTREME_PERFORMANCE_PROFILE;
	[ "$_ACTIVE_PROFILE" == "extreme_battery" ] && read_config $EXTREME_BATTERY_PROFILE;
}

# some initialization code

if [ ! -f $PROFILE_PATH/$LAST_SELECTED ]; then 
	echo "default" > $PROFILE_PATH/$LAST_SELECTED;
	chmod 777 $PROFILE_PATH/$LAST_SELECTED;
fi;

if [ ! -f $PROFILE_PATH/default.profile ]; then
	cp -a $DEFAULT_PROFILE $PROFILE_PATH/default.profile;
fi;
if [ ! -f $PROFILE_PATH/battery.profile ]; then
	cp -a $BATTERY_PROFILE $PROFILE_PATH/battery.profile;
fi;
if [ ! -f $PROFILE_PATH/performance.profile ]; then
	cp -a $PERFORMANCE_PROFILE $PROFILE_PATH/performance.profile;
fi;
if [ ! -f $PROFILE_PATH/extreme_performance.profile ]; then
	cp -a $EXTREME_PERFORMANCE_PROFILE $PROFILE_PATH/extreme_performance.profile
fi;
if [ ! -f $PROFILE_PATH/extreme_battery.profile ]; then
	cp -a $EXTREME_BATTERY_PROFILE $PROFILE_PATH/extreme_battery.profile
fi;

chmod 777 $PROFILE_PATH/*.profile;

